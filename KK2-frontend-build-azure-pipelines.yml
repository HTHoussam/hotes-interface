variables:
  - ${{ if eq( variables['Build.SourceBranchName'], 'main') }}:
      - group: ProdApp
      - name: buildVersion
        value: 'production'
  - ${{ elseif eq( variables['Build.SourceBranchName'], 'staging')}}:
      - group: StagingApp
      - name: buildVersion
        value: 'staging'
  - ${{ else }}:
      - group: DevApp
      - name: buildVersion
        value: 'develop'

  - ${{ if or(eq(variables['Build.SourceBranchName'], 'staging'), eq(variables['Build.SourceBranchName'], 'main')) }}:
      - name: isFeatureBranch
        value: ${{ false }}
  - ${{ else }}:
      - name: isFeatureBranch
        value: ${{ true }}

name: $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

pool:
  vmImage: ubuntu-latest

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'

  - task: DeleteFiles@1
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: '.env.local'

  - task: replacetokens@5
    inputs:
      rootDirectory: '$(System.DefaultWorkingDirectory)'
      targetFiles: '**/*.env,**/*.env.*'
      encoding: 'auto'
      tokenPattern: 'default'
      writeBOM: true
      actionOnMissing: 'warn'
      keepToken: false
      actionOnNoFiles: 'continue'
      enableTransforms: false
      enableRecursion: false
      useLegacyPattern: false
      enableTelemetry: true

  - script: |
      yarn install
      yarn build:${{ variables.buildVersion }}
    displayName: 'yarn install and build (${{ variables.buildVersion }})'

  - task: ArchiveFiles@2
    displayName: 'Creating dist archive'
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/node.zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
